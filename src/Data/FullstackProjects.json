[
  {
    "id": 1,
    "name": "Jerin's Parlour",
    "description": "A full-featured parlour management app built using the MERN stack, enabling customers to book, pay, and review services, with an admin portal for service management. Leveraged React and Vite on the frontend and Node.js, Express, MongoDB, Passport.js, and Multer for a secure, flexible backend, including email/password and Google OAuth2 authentication. Integrated Stripe and PayPal for payment processing, ensuring a seamless and secure user experience.",
    "image": "../Asset/Projects/jerins-parlour.png",
    "source": "https://github.com/LaZyFee/jerins-Parlour-Server",
    "live": "https://jerins-parlour-server-iota.vercel.app/",
    "library": [
      "React",
      "Tailwind",
      "Axios",
      "Zustand",
      "PassportJS",
      "NodeJS",
      "Express",
      "MongoDB",
      "stripe",
      "Paypal"
    ]
  },
  {
    "id": 2,
    "name": "Doctor's Portal",
    "description": "Doctors Portal is a full-stack appointment booking application where users can view available slots for various services by day, book appointments, and make payments using Stripe. The project also includes an admin dashboard, enabling administrators to manage bookings, promote users to admins, view doctor lists, and add new doctors.",
    "image": "Asset/Projects/doctors portal.jpg",
    "source": "https://github.com/LaZyFee/Doctors-portal-client",
    "live": "https://doctors-portal-mern.netlify.app/",
    "library": [
      "React",
      "Tailwind",
      "React-Query",
      "NodeJS",
      "Express",
      "MongoDB",
      "firebase",
      "stripe",
      "NodeMailer"
    ]
  },
  {
    "id": 3,
    "name": "Expense Tracker",
    "description": "This project is an expense tracker web application designed to help users track and manage their expenses efficiently. The app is built with the MERN stack (MongoDB, Express, React, Node.js) and leverages multiple libraries for enhanced UI/UX and functionality.",
    "image": "Asset/Projects/expense tracker.png",
    "source": "https://github.com/LaZyFee/Expense-Tracker-Client",
    "live": "https://expensetrackerwebappx.netlify.app/",
    "library": [
      "React",
      "Tailwind",
      "Zustand",
      "NodeJS",
      "Express",
      "MongoDB",
      "Rechart"
    ]
  },
  {
    "id": 4,
    "name": "ToDo",
    "description": "This is a Todo web application built with React and Vite, featuring user authentication, and CRUD operations for todos. The application also includes a light/dark theme toggle for improved user experience.",
    "image": "Asset/Projects/todo.png",
    "source": "https://github.com/LaZyFee/ToDo_Client",
    "live": "https://todowebappx.netlify.app/",
    "library": ["React", "Tailwind", "NodeJS", "Express", "MongoDB", "Zustand"]
  },
  {
    "id": 5,
    "name": "Internship Task",
    "description": "This is a web application built with React and Vite, featuring state management with Zustand, Tailwind CSS for styling, and DaisyUI for rapid UI development. It includes Stripe for secure payment processing, MongoDB Atlas for cloud data storage, and Nodemailer for email services. Admin features include protected routes to manage orders, customize or delete product plans, and more.",
    "image": "Asset/Projects/internship-task.png",
    "source": "https://github.com/LaZyFee/Internship-Task",
    "live": "https://internship-task-hr.netlify.app",
    "library": [
      "React",
      "Tailwind",
      "Express",
      "Zustand",
      "MongoDB",
      "Stripe",
      "Nodemailer"
    ]
  },
  {
    "id": 5,
    "name": "Ema Jhon",
    "description": "Ema Jhon is a simple eCommerce demo application built using React, Firebase, Express, and MongoDB. This application provides a basic online shopping experience with product listings, order review, cart management, and a seamless authentication flow.",
    "image": "Asset/projects/ema jhon.jpg",
    "source": "https://github.com/LaZyFee/ema-jhon",
    "live": "https://emajhonwebapp.netlify.app/",
    "library": ["React", "Tailwind", "NodeJS", "Express", "MongoDB", "JWT"]
  },
  {
    "id": 6,
    "name": "Genius Car Service",
    "description": "Genius Car Service is a full-stack application that allows users to book car services easily. The application is built using React for the front end and Express with MongoDB for the back end. It provides features for user authentication, service selection, and booking.",
    "image": "Asset/Projects/genius car.jpg",
    "source": "https://github.com/LaZyFee/Genius-Car-Client",
    "live": "https://lazy-car-service.netlify.app/",
    "library": ["React", "Tailwind", "NodeJS", "Express", "MongoDB", "firebase"]
  },
  {
    "id": 7,
    "name": "News Portal",
    "description": "This is a project made to read news. It's a web app made with ReactJS. It's an open-source project and can be found on GitHub.",
    "image": "Asset/Projects/news portal.jpg",
    "source": "https://github.com/LaZyFee/News-portal-client",
    "live": "https://news-portal-326ef.web.app/",
    "library": ["React", "Bootstrap", "firebase", "NodeJS", "Express"]
  },
  {
    "id": 8,
    "name": "Authentication using Email and Password",
    "description": "This is a basic authentication system built using React, Express, MongoDB, and various other tools for email verification and state management. The project is structured to include essential features like user signup, login, email verification, password reset, and route protection.",
    "image": "Asset/Projects/authentication.png",
    "source": "https://github.com/LaZyFee/auth_using_mern",
    "live": "",
    "library": ["React", "NodeJS", "Express", "Zustand", "Mailtrap"]
  },
  {
    "id": 9,
    "name": "ChitChat",
    "description": "ChitChat is a feature-rich real-time chat application developed using React, Express, MongoDB, and Zustand for seamless state management. It incorporates essential functionalities such as user authentication, email verification, password reset, and protected routes. Users can engage in one-on-one and group chats, share files, and enjoy dynamic visuals powered by Three.js and Vanta.js. Real-time communication is enabled through Socket.io, ensuring instant message delivery. The application showcases a responsive design and optimized performance, making it a versatile tool for modern communication.",
    "image": "Asset/Projects/ChitChat.png",
    "source": "https://github.com/LaZyFee/ChitChat-Client-side",
    "live": "",
    "library": [
      "React",
      "NodeJS",
      "Express",
      "MongoDB",
      "Zustand",
      "Three.js",
      "Vanta.js",
      "Socket.io",
      "Axios"
    ]
  },
  {
    "id": 10,
    "name": "Blog Web App",
    "description": "The Blog Web App is a full-stack application designed for creating, managing, and sharing blog posts.It includes robust authentication features such as user signup, login, email verification, password reset, and token-based route protection. Users can upload images with Multer, manage content effortlessly, and enjoy a dynamic browsing experience powered by Swiper. The application ensures data security with JWT authentication and features a clean, responsive design for optimal user experience.",
    "image": "Asset/Projects/",
    "source": "https://github.com/LaZyFee/Blog_app",
    "live": "",
    "library": [
      "React",
      "NodeJS",
      "Express",
      "MongoDB",
      "mongoose",
      "Multer",
      "JWT",
      "Zustand",
      "Swiper",
      "Axios"
    ]
  }
]
